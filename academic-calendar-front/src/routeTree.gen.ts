/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PagesRouteImport } from './routes/_pages'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PagesMyCalendarIndexRouteImport } from './routes/_pages/my-calendar/index'
import { Route as PagesCourseIdRouteImport } from './routes/_pages/course/$id'

const PagesRoute = PagesRouteImport.update({
  id: '/_pages',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesMyCalendarIndexRoute = PagesMyCalendarIndexRouteImport.update({
  id: '/my-calendar/',
  path: '/my-calendar/',
  getParentRoute: () => PagesRoute,
} as any)
const PagesCourseIdRoute = PagesCourseIdRouteImport.update({
  id: '/course/$id',
  path: '/course/$id',
  getParentRoute: () => PagesRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/course/$id': typeof PagesCourseIdRoute
  '/my-calendar': typeof PagesMyCalendarIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/course/$id': typeof PagesCourseIdRoute
  '/my-calendar': typeof PagesMyCalendarIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_pages': typeof PagesRouteWithChildren
  '/_pages/course/$id': typeof PagesCourseIdRoute
  '/_pages/my-calendar/': typeof PagesMyCalendarIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/course/$id' | '/my-calendar'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/course/$id' | '/my-calendar'
  id:
    | '__root__'
    | '/'
    | '/_pages'
    | '/_pages/course/$id'
    | '/_pages/my-calendar/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PagesRoute: typeof PagesRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pages': {
      id: '/_pages'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pages/my-calendar/': {
      id: '/_pages/my-calendar/'
      path: '/my-calendar'
      fullPath: '/my-calendar'
      preLoaderRoute: typeof PagesMyCalendarIndexRouteImport
      parentRoute: typeof PagesRoute
    }
    '/_pages/course/$id': {
      id: '/_pages/course/$id'
      path: '/course/$id'
      fullPath: '/course/$id'
      preLoaderRoute: typeof PagesCourseIdRouteImport
      parentRoute: typeof PagesRoute
    }
  }
}

interface PagesRouteChildren {
  PagesCourseIdRoute: typeof PagesCourseIdRoute
  PagesMyCalendarIndexRoute: typeof PagesMyCalendarIndexRoute
}

const PagesRouteChildren: PagesRouteChildren = {
  PagesCourseIdRoute: PagesCourseIdRoute,
  PagesMyCalendarIndexRoute: PagesMyCalendarIndexRoute,
}

const PagesRouteWithChildren = PagesRoute._addFileChildren(PagesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PagesRoute: PagesRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
