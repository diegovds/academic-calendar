/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Academic Calendar
 * API para o Academic Calendar
 * OpenAPI spec version: 0.0.1
 */
import { customFetch } from '../../fetchMutator'
export type PostSignupBody = {
  /** @minLength 2 */
  name: string
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string
  /** @minLength 6 */
  password: string
}

export type PostSignup201Message = string | null

export type PostSignup201 = {
  token: string
  message: PostSignup201Message
}

export type PostSignup400Token = string | null

export type PostSignup400 = {
  token: PostSignup400Token
  message: string
}

export type PostSignup404Token = string | null

export type PostSignup404 = {
  token: PostSignup404Token
  message: string
}

export type PostSigninBody = {
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string
  /** @minLength 6 */
  password: string
}

export type PostSignin200Message = string | null

export type PostSignin200 = {
  token: string
  message: PostSignin200Message
}

export type PostSignin400Token = string | null

export type PostSignin400 = {
  token: PostSignin400Token
  message: string
}

export type PostSignin404Token = string | null

export type PostSignin404 = {
  token: PostSignin404Token
  message: string
}

export type PostCoursesBody = {
  /** @minLength 2 */
  description: string
  /** @minLength 6 */
  title: string
}

export type PostCourses201CourseCreatedAt = string | null

export type PostCourses201CourseUpdatedAt = string | null

export type PostCourses201Course = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  title: string
  description: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  userId: string
  createdAt: PostCourses201CourseCreatedAt
  updatedAt: PostCourses201CourseUpdatedAt
}

export type PostCourses201 = {
  course: PostCourses201Course
}

export type PostCourses400 = {
  message: string
}

export type PostCourses404 = {
  message: string
}

export type GetCourses200CoursesItemCreatedAt = string | null

export type GetCourses200CoursesItemUpdatedAt = string | null

export type GetCourses200CoursesItem = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  title: string
  description: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  userId: string
  createdAt: GetCourses200CoursesItemCreatedAt
  updatedAt: GetCourses200CoursesItemUpdatedAt
}

export type GetCourses200 = {
  courses: GetCourses200CoursesItem[]
}

export type GetCourses401 = {
  message: string
}

export type PostSemestersBodySemester =
  (typeof PostSemestersBodySemester)[keyof typeof PostSemestersBodySemester]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostSemestersBodySemester = {
  first: 'first',
  second: 'second',
} as const

export type PostSemestersBody = {
  semester: PostSemestersBodySemester
  /**
   * @minimum 2025
   * @maximum 2026
   */
  year: number
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  courseId: string
}

export type PostSemesters201SemesterSemester =
  (typeof PostSemesters201SemesterSemester)[keyof typeof PostSemesters201SemesterSemester]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostSemesters201SemesterSemester = {
  first: 'first',
  second: 'second',
} as const

export type PostSemesters201SemesterCreatedAt = string | null

export type PostSemesters201SemesterUpdatedAt = string | null

export type PostSemesters201Semester = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  semester: PostSemesters201SemesterSemester
  year: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  courseId: string
  createdAt: PostSemesters201SemesterCreatedAt
  updatedAt: PostSemesters201SemesterUpdatedAt
}

export type PostSemesters201 = {
  semester: PostSemesters201Semester
}

export type PostSemesters400 = {
  message: string
}

export type PostSemesters500 = {
  message: string
}

export type PostDisciplinesBody = {
  /** @minLength 2 */
  title: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  semesterId: string
}

export type PostDisciplines201DisciplineCreatedAt = string | null

export type PostDisciplines201DisciplineUpdatedAt = string | null

export type PostDisciplines201Discipline = {
  id: string
  title: string
  createdAt: PostDisciplines201DisciplineCreatedAt
  updatedAt: PostDisciplines201DisciplineUpdatedAt
  semesterId: string
}

export type PostDisciplines201 = {
  discipline: PostDisciplines201Discipline
}

export type PostDisciplines400 = {
  message: string
}

export type PostDisciplines404 = {
  message: string
}

export type GetCoursesCourseIdSemesters200SemestersItemSemester =
  (typeof GetCoursesCourseIdSemesters200SemestersItemSemester)[keyof typeof GetCoursesCourseIdSemesters200SemestersItemSemester]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetCoursesCourseIdSemesters200SemestersItemSemester = {
  first: 'first',
  second: 'second',
} as const

export type GetCoursesCourseIdSemesters200SemestersItemCreatedAt = string | null

export type GetCoursesCourseIdSemesters200SemestersItemUpdatedAt = string | null

export type GetCoursesCourseIdSemesters200SemestersItem = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  semester: GetCoursesCourseIdSemesters200SemestersItemSemester
  year: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  courseId: string
  createdAt: GetCoursesCourseIdSemesters200SemestersItemCreatedAt
  updatedAt: GetCoursesCourseIdSemesters200SemestersItemUpdatedAt
}

export type GetCoursesCourseIdSemesters200 = {
  semesters: GetCoursesCourseIdSemesters200SemestersItem[]
}

export type GetCoursesCourseIdSemesters401 = {
  message: string
}

export type GetCoursesCourseIdSemesters404 = {
  message: string
}

export type GetCoursesCourseId200CourseAnyOfCreatedAt = string | null

export type GetCoursesCourseId200CourseAnyOfUpdatedAt = string | null

export type GetCoursesCourseId200CourseAnyOfSemestersItemSemester =
  (typeof GetCoursesCourseId200CourseAnyOfSemestersItemSemester)[keyof typeof GetCoursesCourseId200CourseAnyOfSemestersItemSemester]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetCoursesCourseId200CourseAnyOfSemestersItemSemester = {
  first: 'first',
  second: 'second',
} as const

export type GetCoursesCourseId200CourseAnyOfSemestersItemCreatedAt =
  | string
  | null

export type GetCoursesCourseId200CourseAnyOfSemestersItemUpdatedAt =
  | string
  | null

export type GetCoursesCourseId200CourseAnyOfSemestersItem = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  semester: GetCoursesCourseId200CourseAnyOfSemestersItemSemester
  year: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  courseId: string
  createdAt: GetCoursesCourseId200CourseAnyOfSemestersItemCreatedAt
  updatedAt: GetCoursesCourseId200CourseAnyOfSemestersItemUpdatedAt
}

export type GetCoursesCourseId200CourseAnyOf = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  title: string
  description: string
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  userId: string
  createdAt: GetCoursesCourseId200CourseAnyOfCreatedAt
  updatedAt: GetCoursesCourseId200CourseAnyOfUpdatedAt
  semesters: GetCoursesCourseId200CourseAnyOfSemestersItem[]
}

export type GetCoursesCourseId200Course =
  GetCoursesCourseId200CourseAnyOf | null

export type GetCoursesCourseId200 = {
  course?: GetCoursesCourseId200Course
}

export type GetCoursesCourseId401 = {
  message: string
}

export type PutCoursesCourseIdBody = {
  /** @minLength 1 */
  title?: string
  /** @minLength 1 */
  description?: string
}

export type PutCoursesCourseId200 = {
  success: boolean
}

export type PutCoursesCourseId404Message = string | null

export type PutCoursesCourseId404 = {
  message?: PutCoursesCourseId404Message
}

export type GetSemestersSemesterIdDisciplines200DisciplinesItemCreatedAt =
  | string
  | null

export type GetSemestersSemesterIdDisciplines200DisciplinesItemUpdatedAt =
  | string
  | null

export type GetSemestersSemesterIdDisciplines200DisciplinesItem = {
  id: string
  title: string
  createdAt: GetSemestersSemesterIdDisciplines200DisciplinesItemCreatedAt
  updatedAt: GetSemestersSemesterIdDisciplines200DisciplinesItemUpdatedAt
  semesterId: string
}

export type GetSemestersSemesterIdDisciplines200 = {
  disciplines: GetSemestersSemesterIdDisciplines200DisciplinesItem[]
}

export type GetSemestersSemesterIdDisciplines401 = {
  message: string
}

export type GetSemestersSemesterIdDisciplines404 = {
  message: string
}

export type GetDisciplinesDisciplineIdTasks200TasksItemDueDate = string | null

export type GetDisciplinesDisciplineIdTasks200TasksItemType =
  (typeof GetDisciplinesDisciplineIdTasks200TasksItemType)[keyof typeof GetDisciplinesDisciplineIdTasks200TasksItemType]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetDisciplinesDisciplineIdTasks200TasksItemType = {
  exam: 'exam',
  activity: 'activity',
} as const

export type GetDisciplinesDisciplineIdTasks200TasksItemCreatedAt = string | null

export type GetDisciplinesDisciplineIdTasks200TasksItemUpdatedAt = string | null

export type GetDisciplinesDisciplineIdTasks200TasksItem = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  title: string
  description: string
  dueDate: GetDisciplinesDisciplineIdTasks200TasksItemDueDate
  type: GetDisciplinesDisciplineIdTasks200TasksItemType
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  disciplineId: string
  createdAt: GetDisciplinesDisciplineIdTasks200TasksItemCreatedAt
  updatedAt: GetDisciplinesDisciplineIdTasks200TasksItemUpdatedAt
}

export type GetDisciplinesDisciplineIdTasks200 = {
  tasks: GetDisciplinesDisciplineIdTasks200TasksItem[]
}

export type GetDisciplinesDisciplineIdTasks401 = {
  message: string
}

export type GetDisciplinesDisciplineIdTasks404 = {
  message: string
}

export type PostTasksBodyType =
  (typeof PostTasksBodyType)[keyof typeof PostTasksBodyType]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostTasksBodyType = {
  exam: 'exam',
  activity: 'activity',
} as const

export type PostTasksBody = {
  /** @minLength 3 */
  title: string
  /** @minLength 5 */
  description: string
  dueDate: unknown
  type: PostTasksBodyType
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  disciplineId: string
}

export type PostTasks201TaskDueDate = string | null

export type PostTasks201TaskType =
  (typeof PostTasks201TaskType)[keyof typeof PostTasks201TaskType]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostTasks201TaskType = {
  exam: 'exam',
  activity: 'activity',
} as const

export type PostTasks201TaskCreatedAt = string | null

export type PostTasks201TaskUpdatedAt = string | null

export type PostTasks201Task = {
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  id: string
  title: string
  description: string
  dueDate: PostTasks201TaskDueDate
  type: PostTasks201TaskType
  /** @pattern ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$ */
  disciplineId: string
  createdAt: PostTasks201TaskCreatedAt
  updatedAt: PostTasks201TaskUpdatedAt
}

export type PostTasks201 = {
  task: PostTasks201Task
}

export type PostTasks400 = {
  message: string
}

export type PostTasks401 = {
  message: string
}

export type DeleteTasksTaskId200 = {
  success: boolean
}

export type DeleteTasksTaskId404Message = string | null

export type DeleteTasksTaskId404 = {
  message?: DeleteTasksTaskId404Message
}

export type PutTasksTaskIdBodyType =
  (typeof PutTasksTaskIdBodyType)[keyof typeof PutTasksTaskIdBodyType]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutTasksTaskIdBodyType = {
  exam: 'exam',
  activity: 'activity',
} as const

export type PutTasksTaskIdBody = {
  /** @minLength 1 */
  title?: string
  /** @minLength 1 */
  description?: string
  dueDate?: unknown
  type?: PutTasksTaskIdBodyType
}

export type PutTasksTaskId200 = {
  success: boolean
}

export type PutTasksTaskId404Message = string | null

export type PutTasksTaskId404 = {
  message?: PutTasksTaskId404Message
}

export type PutDisciplinesDisciplineIdBody = {
  /** @minLength 1 */
  title?: string
}

export type PutDisciplinesDisciplineId200 = {
  success: boolean
}

export type PutDisciplinesDisciplineId404Message = string | null

export type PutDisciplinesDisciplineId404 = {
  message?: PutDisciplinesDisciplineId404Message
}

export type DeleteDisciplinesDisciplineId200 = {
  success: boolean
}

export type DeleteDisciplinesDisciplineId404Message = string | null

export type DeleteDisciplinesDisciplineId404 = {
  message?: DeleteDisciplinesDisciplineId404Message
}

export type DeleteCoursesId200 = {
  success: boolean
}

export type DeleteCoursesId404Message = string | null

export type DeleteCoursesId404 = {
  message?: DeleteCoursesId404Message
}

/**
 * @summary Sign up on the platform
 */
export const getPostSignupUrl = () => {
  return `/signup`
}

export const postSignup = async (
  postSignupBody: PostSignupBody,
  options?: RequestInit
): Promise<PostSignup201> => {
  return customFetch<PostSignup201>(getPostSignupUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postSignupBody),
  })
}

/**
 * @summary Sign in on the platform
 */
export const getPostSigninUrl = () => {
  return `/signin`
}

export const postSignin = async (
  postSigninBody: PostSigninBody,
  options?: RequestInit
): Promise<PostSignin200> => {
  return customFetch<PostSignin200>(getPostSigninUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postSigninBody),
  })
}

/**
 * @summary Course creation on the platform
 */
export const getPostCoursesUrl = () => {
  return `/courses`
}

export const postCourses = async (
  postCoursesBody: PostCoursesBody,
  options?: RequestInit
): Promise<PostCourses201> => {
  return customFetch<PostCourses201>(getPostCoursesUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postCoursesBody),
  })
}

/**
 * @summary Get courses from authenticated user
 */
export const getGetCoursesUrl = () => {
  return `/courses`
}

export const getCourses = async (
  options?: RequestInit
): Promise<GetCourses200> => {
  return customFetch<GetCourses200>(getGetCoursesUrl(), {
    ...options,
    method: 'GET',
  })
}

/**
 * @summary Semester creation on the platform
 */
export const getPostSemestersUrl = () => {
  return `/semesters`
}

export const postSemesters = async (
  postSemestersBody: PostSemestersBody,
  options?: RequestInit
): Promise<PostSemesters201> => {
  return customFetch<PostSemesters201>(getPostSemestersUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postSemestersBody),
  })
}

/**
 * @summary Discipline creation on the platform
 */
export const getPostDisciplinesUrl = () => {
  return `/disciplines`
}

export const postDisciplines = async (
  postDisciplinesBody: PostDisciplinesBody,
  options?: RequestInit
): Promise<PostDisciplines201> => {
  return customFetch<PostDisciplines201>(getPostDisciplinesUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postDisciplinesBody),
  })
}

/**
 * @summary Get semesters from authenticated user course
 */
export const getGetCoursesCourseIdSemestersUrl = (courseId: string) => {
  return `/courses/${courseId}/semesters`
}

export const getCoursesCourseIdSemesters = async (
  courseId: string,
  options?: RequestInit
): Promise<GetCoursesCourseIdSemesters200> => {
  return customFetch<GetCoursesCourseIdSemesters200>(
    getGetCoursesCourseIdSemestersUrl(courseId),
    {
      ...options,
      method: 'GET',
    }
  )
}

/**
 * @summary Get course from authenticated user
 */
export const getGetCoursesCourseIdUrl = (courseId: string) => {
  return `/courses/${courseId}`
}

export const getCoursesCourseId = async (
  courseId: string,
  options?: RequestInit
): Promise<GetCoursesCourseId200> => {
  return customFetch<GetCoursesCourseId200>(
    getGetCoursesCourseIdUrl(courseId),
    {
      ...options,
      method: 'GET',
    }
  )
}

/**
 * @summary Update a course (owned by the authenticated user)
 */
export const getPutCoursesCourseIdUrl = (courseId: string) => {
  return `/courses/${courseId}`
}

export const putCoursesCourseId = async (
  courseId: string,
  putCoursesCourseIdBody: PutCoursesCourseIdBody,
  options?: RequestInit
): Promise<PutCoursesCourseId200> => {
  return customFetch<PutCoursesCourseId200>(
    getPutCoursesCourseIdUrl(courseId),
    {
      ...options,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json', ...options?.headers },
      body: JSON.stringify(putCoursesCourseIdBody),
    }
  )
}

/**
 * @summary Get disciplines from a semester of authenticated user
 */
export const getGetSemestersSemesterIdDisciplinesUrl = (semesterId: string) => {
  return `/semesters/${semesterId}/disciplines`
}

export const getSemestersSemesterIdDisciplines = async (
  semesterId: string,
  options?: RequestInit
): Promise<GetSemestersSemesterIdDisciplines200> => {
  return customFetch<GetSemestersSemesterIdDisciplines200>(
    getGetSemestersSemesterIdDisciplinesUrl(semesterId),
    {
      ...options,
      method: 'GET',
    }
  )
}

/**
 * @summary Get tasks of a discipline for authenticated user
 */
export const getGetDisciplinesDisciplineIdTasksUrl = (disciplineId: string) => {
  return `/disciplines/${disciplineId}/tasks`
}

export const getDisciplinesDisciplineIdTasks = async (
  disciplineId: string,
  options?: RequestInit
): Promise<GetDisciplinesDisciplineIdTasks200> => {
  return customFetch<GetDisciplinesDisciplineIdTasks200>(
    getGetDisciplinesDisciplineIdTasksUrl(disciplineId),
    {
      ...options,
      method: 'GET',
    }
  )
}

/**
 * @summary Create task for a discipline
 */
export const getPostTasksUrl = () => {
  return `/tasks`
}

export const postTasks = async (
  postTasksBody: PostTasksBody,
  options?: RequestInit
): Promise<PostTasks201> => {
  return customFetch<PostTasks201>(getPostTasksUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(postTasksBody),
  })
}

/**
 * @summary Delete a task (owned by the authenticated user)
 */
export const getDeleteTasksTaskIdUrl = (taskId: string) => {
  return `/tasks/${taskId}`
}

export const deleteTasksTaskId = async (
  taskId: string,
  options?: RequestInit
): Promise<DeleteTasksTaskId200> => {
  return customFetch<DeleteTasksTaskId200>(getDeleteTasksTaskIdUrl(taskId), {
    ...options,
    method: 'DELETE',
  })
}

/**
 * @summary Update a task (owned by the authenticated user)
 */
export const getPutTasksTaskIdUrl = (taskId: string) => {
  return `/tasks/${taskId}`
}

export const putTasksTaskId = async (
  taskId: string,
  putTasksTaskIdBody: PutTasksTaskIdBody,
  options?: RequestInit
): Promise<PutTasksTaskId200> => {
  return customFetch<PutTasksTaskId200>(getPutTasksTaskIdUrl(taskId), {
    ...options,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(putTasksTaskIdBody),
  })
}

/**
 * @summary Update a discipline (owned by the authenticated user)
 */
export const getPutDisciplinesDisciplineIdUrl = (disciplineId: string) => {
  return `/disciplines/${disciplineId}`
}

export const putDisciplinesDisciplineId = async (
  disciplineId: string,
  putDisciplinesDisciplineIdBody: PutDisciplinesDisciplineIdBody,
  options?: RequestInit
): Promise<PutDisciplinesDisciplineId200> => {
  return customFetch<PutDisciplinesDisciplineId200>(
    getPutDisciplinesDisciplineIdUrl(disciplineId),
    {
      ...options,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json', ...options?.headers },
      body: JSON.stringify(putDisciplinesDisciplineIdBody),
    }
  )
}

/**
 * @summary Delete a discipline (owned by the authenticated user)
 */
export const getDeleteDisciplinesDisciplineIdUrl = (disciplineId: string) => {
  return `/disciplines/${disciplineId}`
}

export const deleteDisciplinesDisciplineId = async (
  disciplineId: string,
  options?: RequestInit
): Promise<DeleteDisciplinesDisciplineId200> => {
  return customFetch<DeleteDisciplinesDisciplineId200>(
    getDeleteDisciplinesDisciplineIdUrl(disciplineId),
    {
      ...options,
      method: 'DELETE',
    }
  )
}

/**
 * @summary Delete a course
 */
export const getDeleteCoursesIdUrl = (id: string) => {
  return `/courses/${id}`
}

export const deleteCoursesId = async (
  id: string,
  options?: RequestInit
): Promise<DeleteCoursesId200> => {
  return customFetch<DeleteCoursesId200>(getDeleteCoursesIdUrl(id), {
    ...options,
    method: 'DELETE',
  })
}
